basePath: /
definitions:
  project.Project:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  task.Task:
    properties:
      id:
        type: integer
      name:
        type: string
      project_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: Saw Ye Htet
    url: http://www.swagger.io/support
  description: This is a sample server for project management.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Project Management API
  version: "1.0"
paths:
  /projects:
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/project.Project'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/project.Project'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new project
      tags:
      - projects
  /projects/{id}:
    delete:
      description: Delete a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get a project by id
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a project by id
      tags:
      - projects
    put:
      description: Update a project by id
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/project.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Project'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a project by id
      tags:
      - projects
  /tasks:
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/task.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/task.Task'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Delete a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get a task by id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Task'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a task by id
      tags:
      - tasks
    put:
      description: Update a task by id
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/task.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Task'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a task by id
      tags:
      - tasks
swagger: "2.0"
